server:
  port: 8081

spring:
  application:
    name: user-service
    
  datasource:
    url: jdbc:postgresql://localhost:5432/hotel_reservation
    username: hotel_user
    password: hotel_pass
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
    
  redis:
    host: localhost
    port: 6379
    password: ${REDIS_PASSWORD:hotel_redis_pass}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        
jwt:
  secret: ${JWT_SECRET:ThisIsAVeryLongSecretKeyForHS512AlgorithmThatShouldBeAtLeast512BitsWhichIs64BytesLongForProperSecurityAndShouldBeRandomlyGenerated}
  expiration: 1800000 # 30 minutes

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.hotel.user: INFO
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"